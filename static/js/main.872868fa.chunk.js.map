{"version":3,"sources":["DS's/DataStructures.module.css","Algo/AlgoVisualizer.module.css","MainPage/HomeScreen.module.css","Algo/Algorithms/UnweightedSearchAlgorithms.js","reportWebVitals.js","MainPage/HomeScreen.jsx","Algo/Images/arrow_right.jpg","Algo/Images/circle.png","Algo/Components/GridSquare.jsx","Algo/Images/gear.png","Algo/Components/NavBar.jsx","Algo/Algorithms/WeightedSearchAlgorithms.js","Algo/Components/Settings.jsx","Algo/Components/Grid.jsx","Algo/Components/PopupWarning.jsx","Algo/AlgoVisualizer.js","DS's/Components/Toolbar.jsx","DS's/Components/NavBar.jsx","DS's/Components/Alert.jsx","DS's/Components/Visualizer.jsx","DS's/DataStructures.js","index.js"],"names":["module","exports","visited","previousNode","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","HomeScreen","parent","document","querySelector","home","splitscreen","leftPanel","left","botPanel","right","content","addEventListener","style","width","window","innerWidth","location","href","className","pageHeader","panel","title","React","Component","Square","this","props","id","handleClick","drag","drop","isStart","isEnd","weight","dragAndDropUpdate","coords","split","x","y","onClick","src","right_arrow","draggable","onDragStart","event","algo","start","alt","circle","end","onDrop","Promise","resolve","value","error","console","log","onDragOver","preventDefault","NavigationBar","changeAlgorithm","changeGrid","generateNewGrid","clearWeightsAndWalls","Nav","justify","fill","variant","onSelect","eventKey","Item","Link","NavDropdown","Button","margin","algorithm","settings_btn","$","settings_bg","fadeIn","gear","resetVisited","grid","i","push","j","isWall","resetPreviousNode","active","Settings","speed","button","getElementsByClassName","classList","replace","inactive","changeSpeed","target","fadeOut","settings","settings_close","Table","borderless","responsive","GRID_ROWS","GRID_COLS","unweightedStartNodeX","unweightedStartNodeY","unweightedEndNodeX","unweightedEndNodeY","weightedStartNodeX","weightedStartNodeY","weightedEndNodeX","weightedEndNodeY","Grid","state","mainGrid","unweightedGrid","weightedGrid","currGrid","uGrid","wGrid","grid_square","unselected","setState","has","length","newGrid","slice","selected","algo_app","css","path","startX","startY","endX","endY","queue","currentNode","shift","bfs","stateGrid","setTimeout","addClass","drawUnweightedShortestPath","stack","pop","dfs","q","node","prevX","prevY","sort","a","b","dijkstra","drawWeightedShortestPath","Math","sqrt","abs","astar","shortestPath","currX","currY","temp","unweightedShortestPath","attr","shortestpath","currNode","weightedShortestPath","resetGrid","animateBFS","animateDFS","animateDijkstra","animateAstar","popup","key","type","random","trunc","e","data","JSON","parse","dataTransfer","getData","sY","substring","indexOf","sX","eY","eX","nodeClass","String","includes","align","visualizeAlgorithm","generateRandomGrid","map","row","grid_row","parentNode","setData","stringify","stringEndId","parseInt","appendChild","getElementById","Popup","popup_text","close","App","open","xmlns","height","viewBox","d","Toolbar","ds","toolbar","each","index","element","functions","forEach","add","remove","enqueue","dequeue","placeholder","maxLength","marginRight","val","NavBar","defaultActiveKey","onchange","OverlayTrigger","placement","delay","hide","overlay","Tooltip","Alert","onclick","alertBG","alert","DSVisualizer","behavior","structure","bind","struct","Set","text","addAnim","remAnim","min","splice","comps","anime","targets","translateX","duration","complete","half1","half2","concat","timeline","autoplay","play","handleChange","btns","marginLeft","item","fontSize","DataStructures","DS","ReactDOM","render","exact","component","MainPage","AlgoVisualizer"],"mappings":"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","file":"static/js/main.872868fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"DS\":\"DataStructures_DS__1Drix\",\"DSVisualizer\":\"DataStructures_DSVisualizer__3okgg\",\"toolbar\":\"DataStructures_toolbar__2I6ed\",\"item\":\"DataStructures_item__2VWtI\",\"alertBG\":\"DataStructures_alertBG__c2-aL\",\"alert\":\"DataStructures_alert__izmQq\",\"close\":\"DataStructures_close__YNlw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"algo_app\":\"AlgoVisualizer_algo_app__2-5KE\",\"grid\":\"AlgoVisualizer_grid__3HaUU\",\"grid_row\":\"AlgoVisualizer_grid_row__3FgLe\",\"grid_square\":\"AlgoVisualizer_grid_square__2Em8L\",\"popup\":\"AlgoVisualizer_popup__1AG2f\",\"popup_text\":\"AlgoVisualizer_popup_text__WnjmW\",\"close\":\"AlgoVisualizer_close__3QkKp\",\"selected\":\"AlgoVisualizer_selected__2Eow0\",\"unselected\":\"AlgoVisualizer_unselected__YB43-\",\"start\":\"AlgoVisualizer_start__3q-2-\",\"end\":\"AlgoVisualizer_end__35VuV\",\"visited\":\"AlgoVisualizer_visited__3jBGY\",\"visit_square\":\"AlgoVisualizer_visit_square__22aOj\",\"shortestpath\":\"AlgoVisualizer_shortestpath__2goPl\",\"navbar_btn\":\"AlgoVisualizer_navbar_btn___fTwr\",\"settings_btn\":\"AlgoVisualizer_settings_btn__5a2NL\",\"gear\":\"AlgoVisualizer_gear__zkI2U\",\"rotate-gear\":\"AlgoVisualizer_rotate-gear__YUSXL\",\"settings_bg\":\"AlgoVisualizer_settings_bg__LQa_Y\",\"settings\":\"AlgoVisualizer_settings__2urUI\",\"settings_close\":\"AlgoVisualizer_settings_close__1KiaY\",\"inactive\":\"AlgoVisualizer_inactive__1WDOL\",\"active\":\"AlgoVisualizer_active__1cKr8\",\"popup-animation\":\"AlgoVisualizer_popup-animation__31Rgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageHeader\":\"HomeScreen_pageHeader__1rMfE\",\"splitscreen\":\"HomeScreen_splitscreen__1YthU\",\"panel\":\"HomeScreen_panel__Y8jXD\",\"content\":\"HomeScreen_content__16-X-\",\"title\":\"HomeScreen_title__3z7m7\",\"right\":\"HomeScreen_right__3zJqi\",\"left\":\"HomeScreen_left__244-Q\",\"h2\":\"HomeScreen_h2__2X1O3\"};","var visited;\r\nvar previousNode;\r\n\r\nconst rows = 25;\r\nconst cols = 72;\r\n\r\n// Breadth first search\r\nexport function bfs(grid, startX, startY, endX, endY) {\r\n    resetPreviousNode();\r\n    resetVisited(grid);\r\n    let path = [];\r\n    let queue = [];\r\n    queue.push([startX, startY]);\r\n    while (!!queue.length) {\r\n        let currentNode = queue.shift();\r\n        if (currentNode[0] < 0 || currentNode[1] < 0 || currentNode[0] >= cols || currentNode[1] >= rows || visited[currentNode[1]][currentNode[0]] === true) {\r\n            continue;\r\n        }\r\n\r\n        previousNode[currentNode[1]][currentNode[0]] = [currentNode[2], currentNode[3]];\r\n        visited[currentNode[1]][currentNode[0]] = true;\r\n        path.push([currentNode[0], currentNode[1]]);\r\n\r\n        // return the path if the end node was found\r\n        if (currentNode[0] === endX && currentNode[1] === endY) {\r\n            return path;\r\n        }\r\n\r\n        queue.push([currentNode[0] + 1, currentNode[1], currentNode[0], currentNode[1]]);\r\n        queue.push([currentNode[0] - 1, currentNode[1], currentNode[0], currentNode[1]]);\r\n        queue.push([currentNode[0], currentNode[1] + 1, currentNode[0], currentNode[1]]);\r\n        queue.push([currentNode[0], currentNode[1] - 1, currentNode[0], currentNode[1]]);\r\n    }\r\n\r\n    // returns the path if the end node was unreachable\r\n    return path;\r\n}\r\n\r\n// Depth first search\r\nexport function dfs(grid, startX, startY, endX, endY) {\r\n    resetPreviousNode();\r\n    resetVisited(grid);\r\n    let path = [];\r\n    let stack = [];\r\n    stack.push([startX, startY]);\r\n    while (!!stack.length) {\r\n        let currentNode = stack.pop();\r\n        if (currentNode[0] < 0 || currentNode[1] < 0 || currentNode[0] >= cols || currentNode[1] >= rows || visited[currentNode[1]][currentNode[0]]) {\r\n            continue;\r\n        }\r\n        \r\n        previousNode[currentNode[1]][currentNode[0]] = [currentNode[2], currentNode[3]];\r\n        visited[currentNode[1]][currentNode[0]] = true;\r\n        path.push([currentNode[0], currentNode[1]]);\r\n        \r\n        if (currentNode[0] === endX && currentNode[1] === endY) {\r\n            return path;\r\n        }\r\n\r\n        stack.push([currentNode[0] - 1, currentNode[1], currentNode[0], currentNode[1]]);\r\n        stack.push([currentNode[0] + 1, currentNode[1], currentNode[0], currentNode[1]]);\r\n        stack.push([currentNode[0], currentNode[1] - 1, currentNode[0], currentNode[1]]);\r\n        stack.push([currentNode[0], currentNode[1] + 1, currentNode[0], currentNode[1]]);\r\n    }\r\n\r\n    // returns the path if the end node was unreachable\r\n    return path;\r\n}\r\n\r\n// returns the path the algorithm took to reach the end node\r\nexport function unweightedShortestPath(startX, startY, endX, endY, path) {\r\n    // do not do anything if the end node was not found in the search\r\n    if (!visited[endY][endX]) {\r\n        return [];\r\n    }\r\n    let currX = path[path.length - 1][0], currY = path[path.length - 1][1];\r\n    let shortestPath = [];\r\n    while (currX !== startX || currY !== startY) {\r\n        shortestPath.push([currX, currY]);\r\n        let temp = [currX, currY];\r\n        currX = previousNode[temp[1]][temp[0]][0];\r\n        currY = previousNode[temp[1]][temp[0]][1];\r\n    }\r\n\r\n    return shortestPath;\r\n}\r\n\r\nfunction resetVisited(grid) {\r\n    // function to allow algorithms to have a visited array\r\n    visited = [];\r\n    for (let i = 0; i < rows; i++) {\r\n        visited.push([]);\r\n        for (let j = 0; j < cols; j++) {\r\n            if (grid[i][j].isWall) {\r\n                visited[i].push(true);\r\n            } else {\r\n                visited[i].push(false);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction resetPreviousNode() {\r\n    previousNode = [];\r\n    for (let i = 0; i < rows; i++) {\r\n        previousNode.push([]);\r\n        for (let j = 0; j < cols; j++) {\r\n            previousNode[i].push(null);\r\n        }\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport home from \"./HomeScreen.module.css\";\r\n\r\nexport default class HomeScreen extends React.Component {\r\n  componentDidMount() {\r\n    let parent = document.querySelector(`.${home.splitscreen}`);\r\n    let leftPanel = parent.querySelector(`.${home.left}`),\r\n      botPanel = parent\r\n        .querySelector(`.${home.right}`)\r\n        .querySelector(`.${home.content}`);\r\n\r\n    leftPanel.addEventListener(\"mouseover\", function () {\r\n      leftPanel.style.width = `calc(50vw + 1000px + ${window.innerWidth * 0.05}px)`;\r\n    });\r\n\r\n    leftPanel.addEventListener(\"click\", function () {\r\n      window.location.href = \"/DS-and-Algorithm-Visualizer/#/data-structure-visualizer\";\r\n    });\r\n\r\n    botPanel.addEventListener(\"mouseover\", function () {\r\n      leftPanel.style.width = `calc(50vw + 1000px - ${window.innerWidth * 0.05}px)`;\r\n    });\r\n\r\n    botPanel.addEventListener(\"click\", function () {\r\n      window.location.href = \"/DS-and-Algorithm-Visualizer/#/algorithm-visualizer\";\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={home.pageHeader}>\r\n          <h1>What Do You Want to See Visualized?</h1>\r\n        </div>\r\n        <div className={home.splitscreen}>\r\n          <div className={`${home.panel} ${home.right}`}>\r\n            <div className={home.content}>\r\n              <div className={home.title}>\r\n                <h2>Algorithms</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className={`${home.panel} ${home.left}`}>\r\n            <div className={home.content}>\r\n              <div className={home.title}>\r\n                <h2>Data Structures</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/arrow_right.91c92c08.jpg\";","export default __webpack_public_path__ + \"static/media/circle.abb2dcd5.png\";","import React from \"react\";\r\nimport right_arrow from \"../Images/arrow_right.jpg\";\r\nimport circle from \"../Images/circle.png\";\r\n\r\nimport algo from \"../AlgoVisualizer.module.css\";\r\n\r\nexport default class Square extends React.Component {\r\n  render() {\r\n    const {\r\n      id,\r\n      handleClick,\r\n      className,\r\n      drag,\r\n      drop,\r\n      isStart,\r\n      isEnd,\r\n      weight,\r\n      dragAndDropUpdate,\r\n    } = this.props;\r\n\r\n    let coords = id.split(\"-\")\r\n    let x = coords[1], y = coords[0]\r\n\r\n    if (isStart) {\r\n      return (\r\n        <div\r\n          className={className}\r\n          onClick={() => handleClick(x, y)}\r\n          id={id}\r\n          weight={weight}\r\n        >\r\n          <img\r\n            src={right_arrow}\r\n            draggable={true}\r\n            onDragStart={(event) => {\r\n              drag(event);\r\n            }}\r\n            id={algo.start}\r\n            alt=\"start\"\r\n            title=\"Start\"\r\n          />\r\n        </div>\r\n      );\r\n    } else if (isEnd) {\r\n      return (\r\n        <div\r\n          className={className}\r\n          onClick={() => handleClick(x, y)}\r\n          id={id}\r\n          weight={weight}\r\n        >\r\n          <img\r\n            src={circle}\r\n            draggable={true}\r\n            onDragStart={(event) => {\r\n              drag(event);\r\n            }}\r\n            id={algo.end}\r\n            alt=\"end\"\r\n            title=\"End\"\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className={className}\r\n          onClick={() => handleClick(x, y)}\r\n          id={id}\r\n          onDrop={(event) => {\r\n            let promise = new Promise(function (resolve) {\r\n              dragAndDropUpdate(id, event);\r\n              resolve(event);\r\n            });\r\n\r\n            promise.then(\r\n              function (value) {\r\n                drop(value);\r\n              },\r\n              function (error) {\r\n                console.log(error);\r\n              }\r\n            );\r\n          }}\r\n          onDragOver={(event) => event.preventDefault()}\r\n          weight={weight}\r\n        >\r\n          {weight === null || weight === 0 ? \"\" : weight}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/gear.bba2d891.png\";","import React from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport gear from \"../Images/gear.png\";\r\n\r\nimport algo from \"../AlgoVisualizer.module.css\";\r\n\r\nexport default class NavigationBar extends React.Component {\r\n  render() {\r\n    const {\r\n      changeAlgorithm,\r\n      changeGrid,\r\n      onClick,\r\n      generateNewGrid,\r\n      clearWeightsAndWalls,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Nav\r\n        justify\r\n        id=\"nav_dark\"\r\n        fill=\"true\"\r\n        variant=\"pills\"\r\n        onSelect={(eventKey) => {\r\n          changeAlgorithm(eventKey);\r\n        }}\r\n      >\r\n        <Nav.Item className=\"nav_title\">\r\n          <Nav.Link\r\n            onClick={() => {\r\n              window.location.href = \"/\";\r\n            }}\r\n          >\r\n            Algorithm Visualizer\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <NavDropdown title=\"Unweighted algorithms\">\r\n          <NavDropdown.Item\r\n            eventKey=\"BFS\"\r\n            onClick={() => {\r\n              changeGrid(\"unweighted\");\r\n            }}\r\n          >\r\n            Breadth First Search\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item\r\n            eventKey=\"DFS\"\r\n            onClick={() => {\r\n              changeGrid(\"unweighted\");\r\n            }}\r\n          >\r\n            Depth First Search\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n\r\n        <Button\r\n          variant=\"outline-light\"\r\n          onClick={onClick}\r\n          style={{ margin: \"auto 1%\" }}\r\n        >\r\n          Visualize\r\n          {this.props.algorithm == null ? \"\" : \" \" + this.props.algorithm}!\r\n        </Button>\r\n\r\n        <NavDropdown title=\"Weighted algorithms\">\r\n          <NavDropdown.Item\r\n            eventKey=\"Dijkstra's\"\r\n            onClick={() => {\r\n              changeGrid(\"weighted\");\r\n            }}\r\n          >\r\n            Dijkstra's\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item\r\n            eventKey=\"A*\"\r\n            onClick={() => {\r\n              changeGrid(\"weighted\");\r\n            }}\r\n          >\r\n            A*\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n\r\n        <Nav.Item\r\n          onClick={() => {\r\n            generateNewGrid();\r\n          }}\r\n        >\r\n          <Nav.Link>Generate random grid</Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item\r\n          onClick={() => {\r\n            clearWeightsAndWalls();\r\n          }}\r\n        >\r\n          <Nav.Link>Clear walls/weights</Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          {/* Blank space to seperate settings from algorithms */}\r\n        </Nav.Item>\r\n\r\n        <button\r\n          id={algo.settings_btn}\r\n          onClick={() => {\r\n            $(`#${algo.settings_bg}`).fadeIn(150);\r\n          }}\r\n        >\r\n          <img src={gear} alt=\"settings\" id={algo.gear} />\r\n        </button>\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n","const ROWS = 25;\r\nconst COLS = 72;\r\n\r\nvar visited;\r\nvar previousNode;\r\n\r\nexport function dijkstra(grid, startX, startY, endX, endY) {\r\n    // reset visited grid and previousNode grid\r\n    resetVisited();\r\n    resetPreviousNode();\r\n    let q = [], path = [];\r\n    q.push([startX, startY, null, null, 0]);\r\n    while (!!q.length) {\r\n        let node = q.shift();\r\n        let x = node[0], y = node[1], prevX = node[2], prevY = node[3], weight = node[4];\r\n        if (visited[y][x]) {\r\n            continue;\r\n        }\r\n\r\n        visited[y][x] = true;\r\n        // pushing second and third element to allow backtracking to highlight the shortest path\r\n        path.push([x, y, prevX, prevY]);\r\n\r\n        if (prevX !== null && previousNode[y][x] === null) {\r\n            previousNode[y][x] = [prevX, prevY];\r\n        }\r\n\r\n        if (x === endX && y === endY) {\r\n            return path;\r\n        }\r\n\r\n        if (x + 1 < COLS) {\r\n            q.push([x + 1, y, x, y, weight + grid[y][x + 1].weight]);\r\n        }\r\n\r\n        if (x - 1 >= 0) {\r\n            q.push([x - 1, y, x, y, weight + grid[y][x - 1].weight]);\r\n        }\r\n\r\n        if (y + 1 < ROWS) {\r\n            q.push([x, y + 1, x, y, weight + grid[y + 1][x].weight]);\r\n        }\r\n\r\n        if (y - 1 >= 0) {\r\n            q.push([x, y - 1, x, y, weight + grid[y - 1][x].weight]);\r\n        }\r\n\r\n        // sort queue to get the next neighbor with the least weight\r\n        q.sort((a, b) => {\r\n            return a[4] - b[4];\r\n        });\r\n    }\r\n}\r\n\r\nexport function astar(grid, startX, startY, endX, endY) {\r\n    resetPreviousNode();\r\n    resetVisited();\r\n    let q = [], path = [];\r\n    q.push([startX, startY, null, null, 0]);\r\n\r\n    while (!!q.length) {\r\n        let node = q.shift();\r\n        let x = node[0], y = node[1], prevX = node[2], prevY = node[3], weight = node[4];\r\n        if (visited[y][x]) {\r\n            continue;\r\n        }\r\n\r\n        visited[y][x] = true;\r\n        path.push([x, y, prevX, prevY]);\r\n\r\n        if (x === endX && y === endY) {\r\n            return path;\r\n        }\r\n        if (prevX !== null && previousNode[y][x] === null) {\r\n            previousNode[y][x] = [prevX, prevY];\r\n        }\r\n\r\n        if (x + 1 < COLS) {\r\n            q.push([x + 1, y, x, y, weight + grid[y][x].weight]);\r\n        }\r\n\r\n        if (x - 1 >= 0) {\r\n            q.push([x - 1, y, x, y, weight + grid[y][x].weight]);\r\n        }\r\n\r\n        if (y + 1 < ROWS) {\r\n            q.push([x, y + 1, x, y, weight + grid[y][x].weight]);\r\n        }\r\n\r\n        if (y - 1 >= 0) {\r\n            q.push([x, y - 1, x, y, weight + grid[y][x].weight]);\r\n        }\r\n\r\n        // sort by path weight and euclidian distance\r\n        q.sort((a, b) => {\r\n            return (a[4] + Math.sqrt(Math.abs(a[1] - endY) + Math.abs(a[0] - endX))) - (b[4] + Math.sqrt(Math.abs(b[1] - endY) + Math.abs(b[0] - endX)));\r\n        });\r\n    }\r\n}\r\n\r\n// function that will return the shortest path\r\nexport function weightedShortestPath(startX, startY, path) {\r\n    let currX = path[path.length - 1][2], currY = path[path.length - 1][3];\r\n    let shortestPath = [];\r\n\r\n    while (currX !== startX || currY !== startY) {\r\n        shortestPath.push([currX, currY]);\r\n        if (previousNode[currY][currX] === null) {\r\n            break;\r\n        }\r\n\r\n        let currNode = [currX, currY];\r\n        currX = previousNode[currNode[1]][currNode[0]][0];\r\n        currY = previousNode[currNode[1]][currNode[0]][1];\r\n\r\n    }\r\n    return shortestPath;\r\n}\r\n\r\n// method that re-initializes the visited \r\nfunction resetVisited() {\r\n    visited = [];\r\n    for (let i = 0; i < ROWS; i++) {\r\n        visited.push([]);\r\n        for (let j = 0; j < COLS; j++) {\r\n            visited[i].push(false);\r\n        }\r\n    }\r\n}\r\n\r\n// function to reset grid that helps with finding the shortest path\r\nfunction resetPreviousNode() {\r\n    previousNode = [];\r\n    for (let i = 0; i < ROWS; i++) {\r\n        previousNode.push([]);\r\n        for (let j = 0; j < COLS; j++) {\r\n            previousNode[i].push(null);\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport algo from \"../AlgoVisualizer.module.css\";\r\n\r\nvar active = 1;\r\n\r\nexport default class Settings extends React.Component {\r\n  changeSpeed(speed, button) {\r\n    if (button === active) {\r\n      return;\r\n    }\r\n    document\r\n      .getElementsByClassName(`${algo.settings_btn}`)\r\n      [button].classList.replace(`${algo.inactive}`, `${algo.active}`);\r\n    document\r\n      .getElementsByClassName(`${algo.settings_btn}`)\r\n      [active].classList.replace(`${algo.active}`, `${algo.inactive}`);\r\n\r\n    this.props.changeSpeed(speed);\r\n\r\n    // swap the active button\r\n    active ^= button;\r\n    button ^= active;\r\n    active ^= button;\r\n\r\n    console.log(active,  button);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id={algo.settings_bg}\r\n        onClick={(event) => {\r\n          if (event.target.id === `${algo.settings_bg}`) {\r\n            $(`#${algo.settings_bg}`).fadeOut(150);\r\n          }\r\n        }}\r\n      >\r\n        <div id={algo.settings}>\r\n          <span\r\n            id={algo.settings_close}\r\n            onClick={() => {\r\n              $(`#${algo.settings_bg}`).fadeOut(150);\r\n            }}\r\n          >\r\n            &times;\r\n          </span>\r\n          <Table borderless responsive=\"lg\">\r\n            <tbody>\r\n              <tr>\r\n                <th>Speed</th>\r\n                <td>\r\n                  <button\r\n                    className={`${algo.settings_btn} ${algo.inactive}`}\r\n                    onClick={() => this.changeSpeed(\"slow\", 0)}\r\n                  >\r\n                    Slow\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className={`${algo.settings_btn} ${algo.active}`}\r\n                    onClick={() => this.changeSpeed(\"med\", 1)}\r\n                  >\r\n                    Medium\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className={`${algo.settings_btn} ${algo.inactive}`}\r\n                    onClick={() => this.changeSpeed(\"fast\", 2)}\r\n                  >\r\n                    Fast\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport $ from \"jquery\";\r\nimport Square from \"./GridSquare\";\r\nimport NavigationBar from \"./NavBar\";\r\n\r\nimport {\r\n  bfs,\r\n  dfs,\r\n  unweightedShortestPath,\r\n} from \"../Algorithms/UnweightedSearchAlgorithms\";\r\nimport {\r\n  dijkstra,\r\n  astar,\r\n  weightedShortestPath,\r\n} from \"../Algorithms/WeightedSearchAlgorithms\";\r\nimport Settings from \"./Settings\";\r\n\r\nimport algo from \"../AlgoVisualizer.module.css\";\r\n\r\nconst GRID_ROWS = 25;\r\nconst GRID_COLS = 72;\r\n\r\nvar unweightedStartNodeX = 5;\r\nvar unweightedStartNodeY = 12;\r\nvar unweightedEndNodeX = 66;\r\nvar unweightedEndNodeY = 12;\r\n\r\nvar weightedStartNodeX = 5;\r\nvar weightedStartNodeY = 12;\r\nvar weightedEndNodeX = 66;\r\nvar weightedEndNodeY = 12;\r\n\r\nexport default class Grid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mainGrid: [],\r\n      unweightedGrid: [],\r\n      weightedGrid: [],\r\n      currGrid: \"unweighted\",\r\n      algorithm: null,\r\n      speed: 20,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // initialize grids\r\n    let uGrid = [],\r\n      wGrid = [];\r\n    for (let i = 0; i < GRID_ROWS; i++) {\r\n      uGrid.push([]);\r\n      wGrid.push([]);\r\n      for (let j = 0; j < GRID_COLS; j++) {\r\n        uGrid[i].push({\r\n          id: i + \"-\" + j,\r\n          isWall: false,\r\n          isStart: i === weightedStartNodeY && j === weightedStartNodeX,\r\n          isEnd: i === weightedEndNodeY && j === weightedEndNodeX,\r\n          className:\r\n            i === weightedStartNodeY && j === weightedStartNodeX\r\n              ? `${algo.grid_square} ${algo.start}`\r\n              : i === weightedEndNodeY && j === weightedEndNodeX\r\n              ? `${algo.grid_square} ${algo.end}`\r\n              : `${algo.grid_square} ${algo.unselected}`,\r\n          weight: 0,\r\n        });\r\n        wGrid[i].push({\r\n          id: i + \"-\" + j,\r\n          isWall: false,\r\n          isStart: i === weightedStartNodeY && j === weightedStartNodeX,\r\n          isEnd: i === weightedEndNodeY && j === weightedEndNodeX,\r\n          className:\r\n            i === weightedStartNodeY && j === weightedStartNodeX\r\n              ? `${algo.grid_square} ${algo.start}`\r\n              : i === weightedEndNodeY && j === weightedEndNodeX\r\n              ? `${algo.grid_square} ${algo.end}`\r\n              : `${algo.grid_square} ${algo.unselected}`,\r\n          weight: 0,\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({ unweightedGrid: uGrid });\r\n    this.setState({ weightedGrid: wGrid });\r\n\r\n    // set main grid to unweighted grid\r\n    this.setState({ mainGrid: uGrid });\r\n  }\r\n\r\n  handleClick(x, y) {\r\n    if ($(\"#\" + y + \"-\" + x).has(\"img\").length === 1) {\r\n      return;\r\n    }\r\n\r\n    let newGrid = this.state.mainGrid.slice();\r\n\r\n    if (this.state.currGrid === \"unweighted\") {\r\n      newGrid[y][x] = {\r\n        ...newGrid[y][x],\r\n        isWall: !newGrid[y][x].isWall,\r\n        className: newGrid[y][x].isWall\r\n          ? `${algo.grid_square} ${algo.unselected}`\r\n          : `${algo.grid_square} ${algo.selected}`,\r\n      };\r\n    } else {\r\n      newGrid[y][x] = {\r\n        ...newGrid[y][x],\r\n        weight: newGrid[y][x].weight + 1 === 5 ? 0 : newGrid[y][x].weight + 1,\r\n      };\r\n    }\r\n    this.setState({ mainGrid: newGrid });\r\n  }\r\n\r\n  ///////////////////////////// algorithm animations /////////////////////////////\r\n\r\n  /********************* Unweighted algorithms *********************/\r\n  animateBFS(grid) {\r\n    $(`.${algo.algo_app}`).css(\"pointer-events\", \"none\");\r\n    const path = bfs(\r\n      grid,\r\n      unweightedStartNodeX,\r\n      unweightedStartNodeY,\r\n      unweightedEndNodeX,\r\n      unweightedEndNodeY\r\n    );\r\n    let speed = this.state.speed;\r\n    let stateGrid = this.state.mainGrid;\r\n\r\n    for (let i = 1; i < path.length - 1; i++) {\r\n      setTimeout(() => {\r\n        let id = path[i][1] + \"-\" + path[i][0];\r\n        $(\"#\" + id).addClass(`${algo.visited}`);\r\n        stateGrid[path[i][1]][\r\n          path[i][0]\r\n        ].className = `${algo.grid_square} ${algo.visited}`;\r\n      }, speed * i);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      $(`.${algo.algo_app}`).css(\"pointer-events\", \"auto\");\r\n      this.drawUnweightedShortestPath(\r\n        unweightedStartNodeX,\r\n        unweightedStartNodeY,\r\n        unweightedEndNodeX,\r\n        unweightedEndNodeY,\r\n        speed,\r\n        path\r\n      );\r\n      this.setState({ mainGrid: stateGrid });\r\n    }, path.length * speed);\r\n  }\r\n\r\n  animateDFS(grid) {\r\n    $(`.${algo.algo_app}`).css(\"pointer-events\", \"none\");\r\n    const path = dfs(\r\n      grid,\r\n      unweightedStartNodeX,\r\n      unweightedStartNodeY,\r\n      unweightedEndNodeX,\r\n      unweightedEndNodeY\r\n    );\r\n    let speed = this.state.speed;\r\n    let stateGrid = this.state.mainGrid;\r\n\r\n    for (let i = 1; i < path.length - 1; i++) {\r\n      setTimeout(() => {\r\n        let id = path[i][1] + \"-\" + path[i][0];\r\n        $(\"#\" + id).addClass(`${algo.visited}`);\r\n        stateGrid[path[i][1]][\r\n          path[i][0]\r\n        ].className = `${algo.grid_square} ${algo.visited}`;\r\n      }, speed * i);\r\n    }\r\n    setTimeout(() => {\r\n      $(`.${algo.algo_app}`).css(\"pointer-events\", \"auto\");\r\n      this.drawUnweightedShortestPath(\r\n        unweightedStartNodeX,\r\n        unweightedStartNodeY,\r\n        unweightedEndNodeX,\r\n        unweightedEndNodeY,\r\n        speed,\r\n        path\r\n      );\r\n      this.setState({ mainGrid: stateGrid });\r\n    }, path.length * speed);\r\n  }\r\n\r\n  /********************* Weighted algorithms *********************/\r\n\r\n  animateDijkstra(grid) {\r\n    $(`.${algo.algo_app}`).css(\"pointer-events\", \"none\");\r\n    const path = dijkstra(\r\n      grid,\r\n      weightedStartNodeX,\r\n      weightedStartNodeY,\r\n      weightedEndNodeX,\r\n      weightedEndNodeY\r\n    );\r\n    let speed = this.state.speed;\r\n    let stateGrid = this.state.mainGrid;\r\n\r\n    for (let i = 1; i < path.length - 1; i++) {\r\n      setTimeout(() => {\r\n        let id = path[i][1] + \"-\" + path[i][0];\r\n        $(\"#\" + id).addClass(`${algo.visited}`);\r\n        stateGrid[path[i][1]][\r\n          path[i][0]\r\n        ].className = `${algo.grid_square} ${algo.visited}`;\r\n      }, speed * i);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      $(`.${algo.algo_app}`).css(\"pointer-events\", \"auto\");\r\n      this.drawWeightedShortestPath(\r\n        weightedEndNodeX,\r\n        weightedEndNodeY,\r\n        speed,\r\n        path\r\n      );\r\n      this.setState({ mainGrid: stateGrid });\r\n    }, path.length * speed);\r\n  }\r\n\r\n  animateAstar(grid) {\r\n    $(`.${algo.algo_app}`).css(\"pointer-events\", \"none\");\r\n    const path = astar(\r\n      grid,\r\n      weightedStartNodeX,\r\n      weightedStartNodeY,\r\n      weightedEndNodeX,\r\n      weightedEndNodeY\r\n    );\r\n\r\n    let speed = this.state.speed;\r\n    let stateGrid = this.state.mainGrid;\r\n\r\n    for (let i = 1; i < path.length - 1; i++) {\r\n      setTimeout(() => {\r\n        let id = path[i][1] + \"-\" + path[i][0];\r\n        $(\"#\" + id).addClass(`${algo.visited}`);\r\n        stateGrid[path[i][1]][\r\n          path[i][0]\r\n        ].className = `${algo.grid_square} ${algo.visited}`;\r\n      }, speed * i);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      $(`${algo.grid}`).css(\"pointer-events\", \"auto\");\r\n      this.drawWeightedShortestPath(\r\n        weightedEndNodeX,\r\n        weightedEndNodeY,\r\n        speed,\r\n        path\r\n      );\r\n      this.setState({ mainGrid: stateGrid });\r\n    }, speed * path.length);\r\n  }\r\n\r\n  /////////////////// draw paths //////////////////////////\r\n\r\n  drawUnweightedShortestPath(\r\n    unweightedStartNodeX,\r\n    unweightedStartNodeY,\r\n    unweightedEndNodeX,\r\n    unweightedEndNodeY,\r\n    speed,\r\n    path\r\n  ) {\r\n    let grid = this.state.mainGrid;\r\n    const shortestPath = unweightedShortestPath(\r\n      unweightedStartNodeX,\r\n      unweightedStartNodeY,\r\n      unweightedEndNodeX,\r\n      unweightedEndNodeY,\r\n      path\r\n    );\r\n    for (let i = 1; i < shortestPath.length; i++) {\r\n      setTimeout(() => {\r\n        let id = shortestPath[i][1] + \"-\" + shortestPath[i][0];\r\n        $(\"#\" + id).attr(\"class\", `${algo.grid_square} ${algo.shortestpath}`);\r\n        grid[shortestPath[i][1]][\r\n          shortestPath[i][0]\r\n        ].className = `${algo.grid_square} ${algo.shortestpath}`;\r\n      }, speed * i * 2);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      $(`.${algo.algo_app}`).css(\"pointer-events\", \"auto\");\r\n      this.setState({ mainGrid: grid });\r\n    }, speed * shortestPath.length * 2);\r\n  }\r\n\r\n  drawWeightedShortestPath(\r\n    weightedStartNodeX,\r\n    weightedStartNodeY,\r\n    speed,\r\n    path\r\n  ) {\r\n    let grid = this.state.mainGrid;\r\n    const shortestPath = weightedShortestPath(\r\n      weightedStartNodeX,\r\n      weightedStartNodeY,\r\n      path\r\n    );\r\n    for (let i = 0; i < shortestPath.length - 1; i++) {\r\n      setTimeout(() => {\r\n        let id = shortestPath[i][1] + \"-\" + shortestPath[i][0];\r\n        $(\"#\" + id).attr(\"class\", `${algo.grid_square} ${algo.shortestpath}`);\r\n        grid[shortestPath[i][1]][\r\n          shortestPath[i][0]\r\n        ].className = `${algo.grid_square} ${algo.shortestpath}`;\r\n      }, speed * i * 2);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      $(`.${algo.algo_app}`).css(\"pointer-events\", \"auto\");\r\n      this.setState({ mainGrid: grid });\r\n    }, shortestPath.length * speed * 2);\r\n  }\r\n\r\n  /////////////////// visualize button function //////////////////////////\r\n  visualizeAlgorithm() {\r\n    this.resetGrid();\r\n    const { algorithm, mainGrid } = this.state;\r\n    switch (algorithm) {\r\n      case \"BFS\":\r\n        this.animateBFS(mainGrid);\r\n        break;\r\n      case \"DFS\":\r\n        this.animateDFS(mainGrid);\r\n        break;\r\n      case \"Dijkstra's\":\r\n        this.animateDijkstra(mainGrid);\r\n        break;\r\n      case \"A*\":\r\n        this.animateAstar(mainGrid);\r\n        break;\r\n      default:\r\n        $(`#${algo.popup}`).fadeIn(150);\r\n        break;\r\n    }\r\n  }\r\n\r\n  changeAlgorithm(key) {\r\n    this.setState({ algorithm: key });\r\n  }\r\n\r\n  changeSpeed(speed) {\r\n    if (speed === \"slow\") {\r\n      this.setState({ speed: 30 });\r\n    } else if (speed === \"med\") {\r\n      this.setState({ speed: 20 });\r\n    } else {\r\n      this.setState({ speed: 15 });\r\n    }\r\n  }\r\n\r\n  changeGrid(type) {\r\n    this.resetGrid();\r\n    if (type === \"weighted\" && this.state.currGrid === \"unweighted\") {\r\n      this.setState({\r\n        currGrid: \"weighted\",\r\n        unweightedGrid: this.state.mainGrid,\r\n        mainGrid: this.state.weightedGrid,\r\n      });\r\n    } else if (type === \"unweighted\" && this.state.currGrid === \"weighted\") {\r\n      this.setState({\r\n        currGrid: \"unweighted\",\r\n        weightedGrid: this.state.mainGrid,\r\n        mainGrid: this.state.unweightedGrid,\r\n      });\r\n    }\r\n  }\r\n\r\n  generateRandomGrid() {\r\n    let grid = this.state.mainGrid.slice();\r\n    if (this.state.currGrid === \"unweighted\") {\r\n      for (let i = 0; i < GRID_ROWS; i++) {\r\n        for (let j = 0; j < GRID_COLS; j++) {\r\n          if (\r\n            (i === unweightedStartNodeY && j === unweightedStartNodeX) ||\r\n            (i === unweightedEndNodeY && j === unweightedEndNodeX)\r\n          ) {\r\n            continue;\r\n          }\r\n          grid[i][j].isWall = Math.random() * 5 > 4;\r\n          grid[i][j].className = grid[i][j].isWall\r\n            ? `${algo.grid_square} ${algo.selected}`\r\n            : `${algo.grid_square} ${algo.unselected}`;\r\n        }\r\n      }\r\n      this.setState({ mainGrid: grid });\r\n    } else {\r\n      for (let i = 0; i < GRID_ROWS; i++) {\r\n        for (let j = 0; j < GRID_COLS; j++) {\r\n          if (\r\n            (i === weightedStartNodeY && j === weightedStartNodeX) ||\r\n            (i === weightedEndNodeY && j === weightedEndNodeX)\r\n          ) {\r\n            grid[i][j].weight = 0;\r\n            continue;\r\n          }\r\n          grid[i][j].weight = Math.trunc(Math.random() * 5);\r\n        }\r\n      }\r\n      this.setState({ mainGrid: grid });\r\n    }\r\n  }\r\n\r\n  clearWeightsAndWalls() {\r\n    let grid = [];\r\n    if (this.state.currGrid === \"unweighted\") {\r\n      for (let i = 0; i < GRID_ROWS; i++) {\r\n        grid.push([]);\r\n        for (let j = 0; j < GRID_COLS; j++) {\r\n          grid[i].push({\r\n            id: i + \"-\" + j,\r\n            isStart: i === unweightedStartNodeY && j === unweightedStartNodeX,\r\n            isEnd: i === unweightedEndNodeY && j === unweightedEndNodeX,\r\n            className:\r\n              i === unweightedStartNodeY && j === unweightedStartNodeX\r\n                ? `${algo.grid_square} ${algo.start}`\r\n                : i === unweightedEndNodeY && j === unweightedEndNodeX\r\n                ? `${algo.grid_square} ${algo.end}`\r\n                : `${algo.grid_square} ${algo.unselected}`,\r\n            weight: 0,\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < GRID_ROWS; i++) {\r\n        grid.push([]);\r\n        for (let j = 0; j < GRID_COLS; j++) {\r\n          grid[i].push({\r\n            id: i + \"-\" + j,\r\n            isStart: i === weightedStartNodeY && j === weightedStartNodeX,\r\n            isEnd: i === weightedEndNodeY && j === weightedEndNodeX,\r\n            className:\r\n              i === weightedStartNodeY && j === weightedStartNodeX\r\n                ? `${algo.grid_square} ${algo.start}`\r\n                : i === weightedEndNodeY && j === weightedEndNodeX\r\n                ? `${algo.grid_square} ${algo.end}`\r\n                : `${algo.grid_square} ${algo.unselected}`,\r\n            weight: 0,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    this.setState({ mainGrid: grid });\r\n  }\r\n\r\n  dragAndDropUpdate(id, e) {\r\n    let newGrid = this.state.mainGrid.slice();\r\n    let data = JSON.parse(e.dataTransfer.getData(\"data\"));\r\n\r\n    // sX = startX, sY = startY\r\n    // eX = endX, eY = endY\r\n\r\n    let sY = data[1].substring(0, data[1].indexOf(\"-\"));\r\n    let sX = data[1].substring(data[1].indexOf(\"-\") + 1, data[1].length);\r\n    let eY = id.substring(0, id.indexOf(\"-\"));\r\n    let eX = id.substring(id.indexOf(\"-\") + 1, id.length);\r\n\r\n    if (data[0] === `${algo.start}`) {\r\n      newGrid[sY][sX].isStart = false;\r\n      newGrid[eY][eX].isStart = true;\r\n\r\n      newGrid[sY][sX].className = `${algo.grid_square} ${algo.unselected}`;\r\n      newGrid[eY][eX].className = `${algo.grid_square} ${algo.start}`;\r\n    } else {\r\n      newGrid[sY][sX].isEnd = false;\r\n      newGrid[eY][eX].isEnd = true;\r\n\r\n      newGrid[sY][sX].className = `${algo.grid_square} ${algo.unselected}`;\r\n      newGrid[eY][eX].className = `${algo.grid_square} ${algo.end}`;\r\n    }\r\n\r\n    if (newGrid[eY][eX].isWall) {\r\n      newGrid[eY][eX].isWall = false;\r\n    }\r\n\r\n    if (this.state.currGrid === \"weighted\") {\r\n      newGrid[eY][eX].weight = 0;\r\n    }\r\n\r\n    this.setState({ mainGrid: newGrid });\r\n  }\r\n\r\n  resetGrid() {\r\n    // set visited nodes to blank nodes but not blocked off nodes\r\n    let grid = this.state.mainGrid;\r\n    for (let i = 0; i < GRID_ROWS; i++) {\r\n      for (let j = 0; j < GRID_COLS; j++) {\r\n        // set visited nodes to blank nodes\r\n        let nodeClass = String(grid[i][j].className);\r\n        if (\r\n          nodeClass.includes(\"visited\") ||\r\n          nodeClass.includes(\"shortestpath\")\r\n        ) {\r\n          grid[i][j].className = `${algo.grid_square} ${algo.unselected}`;\r\n        }\r\n      }\r\n    }\r\n    this.setState({ mainGrid: grid });\r\n  }\r\n\r\n  /////////////////// Render ///////////////////\r\n  render() {\r\n    const { mainGrid } = this.state;\r\n    return (\r\n      <div className={`${algo.algo_app}`} align=\"center\">\r\n        <Settings changeSpeed={(speed) => this.changeSpeed(speed)} />\r\n        <NavigationBar\r\n          onClick={() => this.visualizeAlgorithm()}\r\n          changeAlgorithm={(key) => this.changeAlgorithm(key)}\r\n          changeGrid={(type) => this.changeGrid(type)}\r\n          algorithm={this.state.algorithm}\r\n          generateNewGrid={() => this.generateRandomGrid()}\r\n          clearWeightsAndWalls={() => this.clearWeightsAndWalls()}\r\n        />\r\n        <div id={`${algo.grid}`}>\r\n          {mainGrid.map((row, key) => {\r\n            return (\r\n              <div className={`${algo.grid_row}`} key={key}>\r\n                {row.map((node, key) => {\r\n                  return (\r\n                    <Square\r\n                      {...node}\r\n                      handleClick={(j, i) => this.handleClick(j, i)}\r\n                      drag={drag()}\r\n                      drop={drop(node.id, this.state.currGrid)}\r\n                      key={key}\r\n                      dragAndDropUpdate={(e, id) =>\r\n                        this.dragAndDropUpdate(e, id)\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// JavaScript functions\r\n\r\n// drag and drop functions\r\nconst drag = () => (e) => {\r\n  let data = [e.target.id, e.target.parentNode.id];\r\n  e.dataTransfer.setData(\"data\", JSON.stringify(data));\r\n};\r\n\r\nconst drop = (id, grid) => (e) => {\r\n  e.preventDefault();\r\n  let data = JSON.parse(e.dataTransfer.getData(\"data\"));\r\n\r\n  // stringEndId represents the node where data is being dropped\r\n\r\n  let stringEndId = String(id);\r\n  let y = parseInt(stringEndId.substring(0, stringEndId.indexOf(\"-\")));\r\n  let x = parseInt(\r\n    stringEndId.substring(stringEndId.indexOf(\"-\") + 1, stringEndId.length)\r\n  );\r\n  e.target.appendChild(document.getElementById(data[0]));\r\n\r\n  if (grid === \"unweighted\") {\r\n    if (data[0] === `${algo.start}`) {\r\n      unweightedStartNodeX = x;\r\n      unweightedStartNodeY = y;\r\n    } else {\r\n      unweightedEndNodeX = x;\r\n      unweightedEndNodeY = y;\r\n    }\r\n  } else {\r\n    if (data[0] === `${algo.start}`) {\r\n      weightedStartNodeX = x;\r\n      weightedStartNodeY = y;\r\n    } else {\r\n      weightedEndNodeX = x;\r\n      weightedEndNodeY = y;\r\n    }\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport algo from \"../AlgoVisualizer.module.css\";\r\n\r\nexport default class Popup extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        id={algo.popup}\r\n        onClick={(event) => {\r\n          if (event.target.id === `${algo.popup}`) {\r\n            $(`#${algo.popup}`).fadeOut(150);\r\n          }\r\n        }}\r\n      >\r\n        <div id={algo.popup_text}>\r\n          You have not selected an algorithm\r\n          <span\r\n            id={algo.close}\r\n            onClick={() => {\r\n              $(`#${algo.popup}`).fadeOut(150);\r\n            }}\r\n          >\r\n            &times;\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Grid from './Components/Grid';\r\nimport Popup from \"./Components/PopupWarning\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Popup />\r\n      <Grid />\r\n      \r\n      <div\r\n        id=\"repoLink\"\r\n        onClick={() => {\r\n          window.open(\"https://github.com/Roseak-lin/DS-and-Algorithm-Visualizer\");\r\n        }}\r\n      >\r\n        Github Repository{\" \"}\r\n        <svg\r\n          id=\"gitIcon\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"24\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 24 24\"\r\n        >\r\n          <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport ds from \"../DataStructures.module.css\";\r\n\r\nexport default class Toolbar extends React.Component {\r\n\r\n  componentDidMount() {\r\n    // make list functions visible\r\n    $(\"#text_val, #add, #text_add, #remove, #text_rem\").css(\"display\", \"block\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    $(`#${ds.toolbar} > input, button`).each((index, element) => {\r\n      if ($(element).attr(\"placeholder\") !== \"Value\") {\r\n        $(element).css(\"display\", \"none\");\r\n      }\r\n    });\r\n\r\n    this.props.functions.forEach((element) => {\r\n      $(`#${element}`).css(\"display\", \"block\");\r\n      if (element === \"add\") {\r\n        $(\"#text_add\").css(\"display\", \"block\");\r\n        $(\"#text_val\").css(\"display\", \"block\");\r\n      } else if (element === \"remove\") {\r\n        $(\"#text_rem\").css(\"display\", \"block\");\r\n        $(\"#text_val\").css(\"display\", \"block\");\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { add, remove, enqueue, dequeue, push, pop } = this.props;\r\n\r\n    return (\r\n      <div id={ds.toolbar}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Value\"\r\n          maxLength=\"3\"\r\n          id=\"text_val\"\r\n          style={{ marginRight: `1.5em` }}\r\n        />\r\n\r\n        <input type=\"text\" placeholder=\"Index\" maxLength=\"3\" id=\"text_add\" />\r\n        <button\r\n          id=\"add\"\r\n          onClick={() => add($(\"#text_add\").val(), $(\"#text_val\").val())}\r\n        >\r\n          Add at index\r\n        </button>\r\n        <input type=\"text\" placeholder=\"Index\" maxLength=\"3\" id=\"text_rem\" />\r\n        <button\r\n          id=\"remove\"\r\n          onClick={() => remove($(\"#text_rem\").val())}\r\n        >\r\n          Remove at index\r\n        </button>\r\n\r\n        <button id=\"enqueue\" onClick={() => enqueue($(\"#text_val\").val())}>\r\n          Enqueue\r\n        </button>\r\n        <button id=\"dequeue\" onClick={() => dequeue()}>\r\n          Dequeue\r\n        </button>\r\n        \r\n        <button id=\"enqueueF\" onClick={() => push($(\"#text_val\").val())}>\r\n          Enqueue front\r\n        </button>\r\n        <button id=\"dequeueF\" onClick={() => remove(0)}>\r\n          Dequeue front\r\n        </button>\r\n        <button id=\"enqueueB\" onClick={() => enqueue($(\"#text_val\").val())}>\r\n          Enqueue back\r\n        </button>\r\n        <button id=\"dequeueB\" onClick={() => pop()}>\r\n          Dequeue back\r\n        </button>\r\n\r\n        <button id=\"push\" onClick={() => push($(\"#text_val\").val())}>\r\n          Push\r\n        </button>\r\n        <button id=\"pop\" onClick={() => pop()}>\r\n          Pop\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\n\r\nimport { QuestionCircle } from \"react-bootstrap-icons\";\r\n\r\nexport default class NavBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <Nav\r\n        id=\"nav\"\r\n        justify\r\n        variant=\"pills\"\r\n        defaultActiveKey=\"list\"\r\n        onSelect={(key) => {\r\n          this.props.onchange(key);\r\n        }}\r\n      >\r\n        <Nav.Item className=\"nav_title\">\r\n          <Nav.Link onClick={() => {\r\n            window.location.href = \"/\"\r\n          }}>Data Structure Visualizer</Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"list\">\r\n            Dynamic Array (List)\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              delay={{ hide: 100 }}\r\n              overlay={(props) => {\r\n                return <Tooltip {...props}>A list is a very flexible data structure that allows for insertion and deletion at any index</Tooltip>;\r\n              }}\r\n            >\r\n              <QuestionCircle />\r\n            </OverlayTrigger>\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"set\">\r\n            Set\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              delay={{ hide: 100 }}\r\n              overlay={(props) => {\r\n                return <Tooltip {...props}>A set is very similar to a list, but cannot store duplicate items</Tooltip>;\r\n              }}\r\n            >\r\n              <QuestionCircle />\r\n            </OverlayTrigger>\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"queue\">\r\n            Queue\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              delay={{ hide: 100 }}\r\n              overlay={(props) => {\r\n                return (\r\n                  <Tooltip {...props}>\r\n                    A queue is a data structure that only allows a user to\r\n                    insert data at the front and process data in a FIFO fashion\r\n                  </Tooltip>\r\n                );\r\n              }}\r\n            >\r\n              <QuestionCircle />\r\n            </OverlayTrigger>\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"deque\">\r\n            Deque\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              delay={{ hide: 100 }}\r\n              overlay={(props) => {\r\n                return (\r\n                  <Tooltip {...props}>\r\n                    A deque (Double Ended Queue) is very similar to a queue,\r\n                    except items can be added and removed at both ends of the\r\n                    queue\r\n                  </Tooltip>\r\n                );\r\n              }}\r\n            >\r\n              <QuestionCircle />\r\n            </OverlayTrigger>\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n\r\n        <Nav.Item>\r\n          <Nav.Link eventKey=\"stack\">\r\n            Stack\r\n            <OverlayTrigger\r\n              placement=\"bottom\"\r\n              delay={{ hide: 100 }}\r\n              overlay={(props) => {\r\n                return <Tooltip {...props}>A stack is a data structure that only allows items to be added and removed from the front of the data structure</Tooltip>;\r\n              }}\r\n            >\r\n              <QuestionCircle />\r\n            </OverlayTrigger>\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport ds from \"../DataStructures.module.css\";\r\n\r\nexport default class Alert extends React.Component {\r\n  componentDidMount() {\r\n    window.onclick = (e) => {\r\n      if (e.target.className === `${ds.alertBG}`) {\r\n        $(`.${ds.alertBG}`).fadeOut();\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={ds.alertBG}>\r\n        <div className={ds.alert}>\r\n          <div id=\"alert_text\" />\r\n          <span\r\n            className={ds.close}\r\n            onClick={() => {\r\n              $(`.${ds.alertBG}`).fadeOut();\r\n            }}\r\n          >\r\n            &times;\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport Toolbar from \"./Toolbar\";\r\nimport NavBar from \"./NavBar\";\r\nimport Alert from \"./Alert\";\r\n\r\nimport ds from \"../DataStructures.module.css\";\r\n\r\nimport $ from \"jquery\";\r\nimport anime from \"animejs\";\r\n\r\nexport default class DSVisualizer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      behavior: \"list\",\r\n      functions: [\"add\", \"remove\"],\r\n      structure: [1, 2, 3],\r\n    };\r\n\r\n    this.add = this.add.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.enqueue = this.enqueue.bind(this);\r\n    this.dequeue = this.dequeue.bind(this);\r\n    this.push = this.push.bind(this);\r\n    this.pop = this.pop.bind(this);\r\n  }\r\n\r\n  handleChange(key) {\r\n    switch (key) {\r\n      case \"list\":\r\n        this.setState({ functions: [\"add\", \"remove\"] });\r\n        break;\r\n      case \"set\":\r\n        this.setState({ functions: [\"add\", \"remove\"] });\r\n\r\n        let struct = this.state.structure.slice();\r\n        struct = [...new Set(struct)];\r\n        this.setState({ structure: struct });\r\n        break;\r\n      case \"queue\":\r\n        this.setState({ functions: [\"enqueue\", \"dequeue\"] });\r\n        break;\r\n      case \"deque\":\r\n        this.setState({\r\n          functions: [\"enqueueF\", \"dequeueF\", \"enqueueB\", \"dequeueB\"],\r\n        });\r\n        break;\r\n      case \"stack\":\r\n        this.setState({ functions: [\"push\", \"pop\"] });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({ behavior: key });\r\n  }\r\n\r\n  // behavior functions\r\n\r\n  add(index, value) {\r\n    if (value === \"\") {\r\n      $(\"#alert_text\").text(\"Please select enter a value!\");\r\n      $(`.${ds.alertBG}`).fadeIn();\r\n      return;\r\n    }\r\n\r\n    if (this.state.behavior === \"set\" && this.state.structure.includes(value)) {\r\n      $(\"#alert_text\").text(\"The value is already in the set!\");\r\n      $(`.${ds.alertBG}`).fadeIn();\r\n      return;\r\n    }\r\n\r\n    let struct = this.state.structure.slice();\r\n    if (index === \"\") {\r\n      this.addAnim(struct.length - 1, value);\r\n    } else if (parseInt(index) > struct.length) {\r\n      $(\"#alert_text\").text(`Cannot add at index ${index}`);\r\n      $(`.${ds.alertBG}`).fadeIn();\r\n      return;\r\n    } else {\r\n      this.addAnim(index, value);\r\n      return;\r\n    }\r\n  }\r\n\r\n  remove(index) {\r\n    let struct = this.state.structure.slice();\r\n    if (struct.length === 0) {\r\n      $(\"#alert_text\").text(\r\n        `The ${this.state.behavior} is empty! There's nothing to remove!`\r\n      );\r\n      $(`.${ds.alertBG}`).fadeIn();\r\n      return;\r\n    } else if (struct.length <= index) {\r\n      $(\"#alert_text\").text(`No element exists at index ${index}!`);\r\n      $(`.${ds.alertBG}`).fadeIn();\r\n      return;\r\n    }\r\n\r\n    if (index === \"\") {\r\n      this.remAnim(struct.length - 1);\r\n    } else if (parseInt(index) >= struct.length) {\r\n      return;\r\n    } else {\r\n      this.remAnim(index);\r\n    }\r\n  }\r\n\r\n  enqueue(value) {\r\n    if (value === \"\") {\r\n      $(\"#alert_text\").text(\"Please select enter a value!\");\r\n      $(`.${ds.alertBG}`).fadeIn();\r\n      return;\r\n    }\r\n    this.addAnim(Math.min(this.state.structure.length - 1, 0), value);\r\n  }\r\n\r\n  dequeue() {\r\n    let struct = this.state.structure.slice();\r\n    if (struct.length === 0) {\r\n      $(\"#alert_text\").text(\"Queue is empty! There's nothing to dequeue!\");\r\n      $(`.${ds.alertBG}`).fadeIn();\r\n    }\r\n    this.remAnim(struct.length - 1);\r\n  }\r\n\r\n  push(value) {\r\n    if (value === \"\") {\r\n      $(\"#alert_text\").text(\"Please select enter a value!\");\r\n      $(`.${ds.alertBG}`).fadeIn();\r\n      return;\r\n    }\r\n    this.addAnim(this.state.structure.length - 1, value);\r\n  }\r\n\r\n  pop() {\r\n    let struct = this.state.structure.slice();\r\n    if (struct.length === 0) {\r\n      $(\"#alert_text\").text(\"Stack is empty! There's nothing to pop!\");\r\n      $(`.${ds.alertBG}`).fadeIn();\r\n    }\r\n    this.remAnim(struct.length - 1);\r\n  }\r\n\r\n  // animation functions\r\n\r\n  addAnim(index, value) {\r\n    let struct = this.state.structure;\r\n    if (index === struct.length - 1) {\r\n      struct.push(value);\r\n      this.setState({ structure: struct }, () => {\r\n        $(`#item_${index + 1}`)\r\n          .css(\"display\", \"none\")\r\n          .fadeIn(150);\r\n      });\r\n    } else {\r\n      struct.splice(index, 0, value);\r\n      let comps = [];\r\n      for (let i = parseInt(index); i < struct.length; i++) {\r\n        comps.push(`#item_${i}`);\r\n      }\r\n\r\n      anime({\r\n        targets: comps,\r\n        translateX: \"5em\",\r\n        duration: 300,\r\n        complete: () => {\r\n          this.setState({ structure: struct }, () => {\r\n            anime({ targets: comps, translateX: 0, duration: 0 });\r\n          });\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  remAnim(index) {\r\n    let struct = this.state.structure;\r\n    if (index === struct.length - 1) {\r\n      $(`#item_${index}`).fadeOut(150, () => {\r\n        struct.pop();\r\n        this.setState({ structure: struct });\r\n      });\r\n    } else {\r\n      let half1 = struct.slice(0, index);\r\n      let half2 = struct.slice(parseInt(index) + 1);\r\n      struct = half1.concat(half2);\r\n\r\n      let comps = [];\r\n      for (let i = parseInt(index) + 1; i <= struct.length; i++) {\r\n        comps.push(`#item_${i}`);\r\n      }\r\n\r\n      var timeline = anime.timeline({ autoplay: \"false\" });\r\n\r\n      timeline.add({ targets: comps, translateX: \"-5em\", duration: 350 }).add({\r\n        targets: comps,\r\n        translateX: 0,\r\n        duration: 0,\r\n        complete: () => {\r\n          this.setState({ structure: struct });\r\n        },\r\n      });\r\n\r\n      $(`#item_${index}`).fadeOut(150, () => {\r\n        timeline.play();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={ds.DSVisualizer}>\r\n        <NavBar onchange={(key) => this.handleChange(key)} />\r\n        <Toolbar\r\n          functions={this.state.functions}\r\n          btns={this.state.functions}\r\n          add={this.add}\r\n          remove={this.remove}\r\n          enqueue={this.enqueue}\r\n          dequeue={this.dequeue}\r\n          push={this.push}\r\n          pop={this.pop}\r\n        />\r\n        <Alert />\r\n\r\n        <div style={{ marginLeft: \"1.5em\" }}>\r\n          {this.state.structure.map((item, key) => {\r\n            if (key === 0 || key === this.state.structure.length - 1) {\r\n              return (\r\n                <div className={ds.item} id={`item_${key}`} key={key}>\r\n                  <div>{item}</div>\r\n                  <div style={{ fontSize: \"0.7em\" }}>\r\n                    {key === 0 ? \"Head\" : \"Tail\"}\r\n                  </div>\r\n                </div>\r\n              );\r\n            } else {\r\n              return (\r\n                <div className={ds.item} id={`item_${key}`} key={key}>\r\n                  {item}\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import ds from \"./DataStructures.module.css\";\r\n\r\nimport Visualizer from \"./Components/Visualizer\"\r\n\r\nfunction DataStructures() {\r\n    return (\r\n        <div className={`${ds.DS}`}>\r\n            <Visualizer />\r\n            <div\r\n                id=\"repoLink\"\r\n                onClick={() => {\r\n                    window.open(\"https://github.com/Roseak-lin/DS-and-Algorithm-Visualizer\");\r\n                }}\r\n            >\r\n                Github Repository{\" \"}\r\n                <svg\r\n                    id=\"gitIcon\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                >\r\n                    <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataStructures;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter as Router, Route, Switch, BrowserRouter } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport MainPage from './MainPage/HomeScreen';\r\nimport AlgoVisualizer from './Algo/AlgoVisualizer'\r\nimport DataStructures from './DS\\'s/DataStructures'\r\nimport './Nav.css';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={MainPage} />\r\n        <Route exact path=\"/algorithm-visualizer\" component={AlgoVisualizer} />\r\n        <Route exact path=\"/data-structure-visualizer\" component={DataStructures} />\r\n      </Switch>\r\n    </Router>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}