{"version":3,"sources":["Algorithms/SearchAlgorithms.js","Images/arrow_right.jpg","Components/GridSquare.jsx","Components/PopupWarning.jsx","Components/Grid.jsx","App.js","reportWebVitals.js","index.js"],"names":["visited","Square","this","props","x","y","className","id","handleClick","isStart","isEnd","drag","drop","src","right_arrow","draggable","onDragStart","event","alt","title","onClick","onDrop","onDragOver","preventDefault","React","Component","Popup","document","getElementById","style","display","initializeVisited","grid","i","push","j","isWall","startNodeX","startNodeY","endNodeX","endNodeY","Grid","state","algorithm","visualizeAlgorithm","bind","setState","newGrid","slice","node","newSquare","getElementsByClassName","pointerEvents","path","startX","startY","endX","endY","queue","length","currentNode","shift","bfs","setTimeout","stack","pop","dfs","resetGrid","animateBFS","animateDFS","align","Nav","fill","variant","onSelect","eventKey","Item","Link","map","row","key","classList","contains","e","dataTransfer","setData","target","data","getData","stringId","String","appendChild","parseInt","substring","indexOf","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.37a58584.chunk.js","sourcesContent":["let visited;\r\n\r\nexport function bfs(grid, startX, startY, endX, endY) {\r\n    initializeVisited(grid);\r\n    let path = [];\r\n    let queue = [];\r\n    queue.push([startX, startY]);\r\n    while (!!queue.length) {\r\n        let currentNode = queue.shift();\r\n        if (currentNode[0] < 0 || currentNode[1] < 0 || currentNode[0] >= 72 || currentNode[1] >= 25 || visited[currentNode[1]][currentNode[0]] === true) {\r\n            continue;\r\n        }\r\n        visited[currentNode[1]][currentNode[0]] = true;\r\n        path.push([currentNode[0], currentNode[1]]);\r\n        if (currentNode[0] === endX && currentNode[1] === endY) {\r\n            return path;\r\n        }\r\n        queue.push([currentNode[0] + 1, currentNode[1]]);\r\n        queue.push([currentNode[0] - 1, currentNode[1]]);\r\n        queue.push([currentNode[0], currentNode[1] + 1]);\r\n        queue.push([currentNode[0], currentNode[1] - 1]);\r\n    }\r\n\r\n    // returns grid of visited nodes in order\r\n    return path;\r\n}\r\n\r\nexport function dfs(grid, startX, startY, endX, endY) {\r\n    initializeVisited(grid);\r\n    let path = [];\r\n    let stack = [];\r\n    stack.push([startX, startY]);\r\n    while (!!stack.length) {\r\n        let currentNode = stack.pop();\r\n        if (currentNode[0] < 0 || currentNode[1] < 0 || currentNode[0] >= 72 || currentNode[1] >= 25 || visited[currentNode[1]][currentNode[0]] === true) {\r\n            continue;\r\n        }\r\n        visited[currentNode[1]][currentNode[0]] = true;\r\n        path.push([currentNode[0], currentNode[1]]);\r\n        if (currentNode[0] === endX && currentNode[1] === endY) {\r\n            return path;\r\n        }\r\n        stack.push([currentNode[0] + 1, currentNode[1]]);\r\n        stack.push([currentNode[0] - 1, currentNode[1]]);\r\n        stack.push([currentNode[0], currentNode[1] + 1]);\r\n        stack.push([currentNode[0], currentNode[1] - 1]);\r\n    }\r\n\r\n    // returns grid of visited nodes in order\r\n    return path;\r\n}\r\n\r\nfunction initializeVisited(grid) {\r\n    // function to allow algorithms to have a visited array\r\n    visited = [];\r\n    for (let i = 0; i < 25; i++) {\r\n        visited.push([]);\r\n        for (let j = 0; j < 72; j++) {\r\n            if (grid[i][j].isWall) {\r\n                visited[i].push(true);\r\n            } else {\r\n                visited[i].push(false);\r\n            }\r\n        }\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/arrow_right.424bf4fa.jpg\";","import React from \"react\";\r\nimport right_arrow from \"../Images/arrow_right.jpg\";\r\n\r\nexport default class Square extends React.Component {\r\n  render() {\r\n    const {\r\n      x,\r\n      y,\r\n      className,\r\n      id,\r\n      handleClick,\r\n      isStart,\r\n      isEnd,\r\n      drag,\r\n      drop\r\n    } = this.props;\r\n\r\n    if (isStart) {\r\n      return (\r\n        <div className={className} id={id}>\r\n          <img\r\n            src={right_arrow}\r\n            draggable={true}\r\n            onDragStart={(event) => drag(event)}\r\n            id=\"start\"\r\n            alt=\"start\"\r\n            title=\"Start\"\r\n          />\r\n        </div>\r\n      );\r\n    } else if (isEnd) {\r\n      return (\r\n        <div className={className} id={id}>\r\n          <img\r\n            src={right_arrow}\r\n            draggable={true}\r\n            onDragStart={(event) => drag(event)}\r\n            id=\"end\"\r\n            alt=\"end\"\r\n            title=\"End\"\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className={className}\r\n          onClick={() => handleClick(x, y)}\r\n          id={id}\r\n          onDrop={(event) => drop(event)}\r\n          onDragOver={(event) => event.preventDefault()}\r\n        ></div>\r\n      );\r\n    }\r\n  }\r\n}","import React from \"react\";\r\n\r\nexport default class Popup extends React.Component {\r\n\r\n  onClick() {\r\n    document.getElementById(\"popup\").style.display = \"none\";\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"popup\">\r\n        <div id=\"popup-text\">\r\n          You have not selected an algorithm <span id=\"close\" onClick={this.onClick}>&times;</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport Square from \"./GridSquare\";\r\nimport Popup from \"./PopupWarning\";\r\n\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { bfs, dfs } from \"../Algorithms/SearchAlgorithms\";\r\n\r\nvar startNodeX = 5;\r\nvar startNodeY = 12;\r\nvar endNodeX = 66;\r\nvar endNodeY = 12;\r\n\r\nexport default class Grid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      grid: [],\r\n      algorithm: null,\r\n    };\r\n\r\n    this.visualizeAlgorithm = this.visualizeAlgorithm.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // initialize grid\r\n    const grid = [];\r\n    for (let i = 0; i < 25; i++) {\r\n      grid.push([]);\r\n      for (let j = 0; j < 72; j++) {\r\n        let isStart = i === startNodeY && j === startNodeX,\r\n          isEnd = i === endNodeY && j === endNodeX,\r\n          className;\r\n        if (i === startNodeY && j === startNodeX) {\r\n          isStart = true;\r\n          className = \"grid-square start\";\r\n        } else if (i === endNodeY && j === endNodeX) {\r\n          isEnd = true;\r\n          className = \"grid-square end\";\r\n        } else {\r\n          className = \"grid-square unselected\";\r\n        }\r\n        grid[i].push({\r\n          isStart: isStart,\r\n          isEnd: isEnd,\r\n          y: i,\r\n          x: j,\r\n          id: i + \"-\" + j,\r\n          isWall: false,\r\n          className: className,\r\n        });\r\n      }\r\n    }\r\n    this.setState({ grid: grid });\r\n  }\r\n\r\n  handleClick(x, y) {\r\n    if (\r\n      (x === startNodeX && y === startNodeY) ||\r\n      (x === endNodeX && y === endNodeY)\r\n    ) {\r\n      return;\r\n    }\r\n    let newGrid = this.state.grid.slice();\r\n    const node = newGrid[y][x];\r\n    const newSquare = {\r\n      ...node,\r\n      isWall: !node.isWall,\r\n      className: node.isWall\r\n        ? \"grid-square unselected\"\r\n        : \"grid-square selected\",\r\n    };\r\n    newGrid[y][x] = newSquare;\r\n    this.setState({ grid: newGrid });\r\n  }\r\n\r\n  // algorithm animations //////////////////////////////////////////////\r\n\r\n  animateBFS(grid) {\r\n    document.getElementsByClassName(\"grid\")[0].style.pointerEvents = \"none\";\r\n    const path = bfs(grid, startNodeX, startNodeY, endNodeX, endNodeY);\r\n\r\n    for (let i = 1; i < path.length; i++) {\r\n      if (path[i][1] === endNodeY && path[i][0] === endNodeX) {\r\n        break;\r\n      }\r\n      setTimeout(() => {\r\n        // visited[i][0] = x coorinate, visited[i][1] = y coordiante\r\n        const id = path[i][1] + \"-\" + path[i][0];\r\n        document.getElementById(id).className = \"grid-square visited\";\r\n      }, 6 * i);\r\n    }\r\n    setTimeout(() => {\r\n      document.getElementsByClassName(\"grid\")[0].style.pointerEvents = \"auto\";\r\n    }, path.length * 7);\r\n  }\r\n\r\n  animateDFS(grid) {\r\n    document.getElementsByClassName(\"grid\")[0].style.pointerEvents = \"none\";\r\n    const path = dfs(grid, startNodeX, startNodeY, endNodeX, endNodeY);\r\n\r\n    for (let i = 1; i < path.length; i++) {\r\n      if (path[i][1] === endNodeY && path[i][0] === endNodeX) {\r\n        break;\r\n      }\r\n      setTimeout(() => {\r\n        // visited[i][0] = x coorinate, visited[i][1] = y coordiante\r\n        const id = path[i][1] + \"-\" + path[i][0];\r\n        document.getElementById(id).className = \"grid-square visited\";\r\n      }, 6 * i);\r\n    }\r\n    setTimeout(() => {\r\n      document.getElementsByClassName(\"grid\")[0].style.pointerEvents = \"auto\";\r\n    }, path.length * 6);\r\n  }\r\n\r\n  // visualize button function /////////////////////////////////////////////////\r\n  visualizeAlgorithm() {\r\n    resetGrid();\r\n    const { algorithm, grid } = this.state;\r\n    if (algorithm === null) {\r\n      document.getElementById(\"popup\").style.display = \"block\";\r\n    } else if (algorithm === \"bfs\") {\r\n      this.animateBFS(grid);\r\n    } else {\r\n      this.animateDFS(grid);\r\n    }\r\n  }\r\n\r\n  // Render ///////////////////////////////////////////////////\r\n  render() {\r\n    const { grid } = this.state;\r\n    return (\r\n      <div className=\"grid\" align=\"center\">\r\n        <Popup />\r\n        <Nav\r\n          fill\r\n          variant=\"pills\"\r\n          onSelect={(eventKey) => {\r\n            this.setState({ algorithm: eventKey });\r\n          }}\r\n        >\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"bfs\">BFS</Nav.Link>\r\n          </Nav.Item>\r\n          <button id=\"visualize-btn\" onClick={this.visualizeAlgorithm}>\r\n            Visualize!\r\n          </button>\r\n          <Nav.Item>\r\n            <Nav.Link eventKey=\"dfs\">DFS</Nav.Link>\r\n          </Nav.Item>\r\n        </Nav>\r\n        {grid.map((row, key) => {\r\n          return (\r\n            <div className=\"grid-row\" key={key}>\r\n              {row.map((node, key) => {\r\n                return (\r\n                  <Square\r\n                    {...node}\r\n                    handleClick={(j, i) => this.handleClick(j, i)}\r\n                    drag={drag()}\r\n                    drop={drop(node.id)}\r\n                    key={key}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// JavaScript functions\r\n\r\nconst resetGrid = () => {\r\n  for (let i = 0; i < 25; i++) {\r\n    for (let j = 0; j < 72; j++) {\r\n      // set visited nodes to blank nodes\r\n      let node = document.getElementById(i + \"-\" + j);\r\n      if (node.classList.contains(\"visited\")) {\r\n        node.className = \"grid-square unselected\";\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// drag and drop functions\r\nconst drag = () => (e) => {\r\n  e.dataTransfer.setData(\"data\", e.target.id);\r\n};\r\n\r\nconst drop = (id) => (e) => {\r\n  e.preventDefault();\r\n  var data = e.dataTransfer.getData(\"data\");\r\n  let stringId = String(id);\r\n  e.target.appendChild(document.getElementById(data));\r\n  let y = parseInt(stringId.substring(0, stringId.indexOf(\"-\"))),\r\n    x = parseInt(\r\n      stringId.substring(stringId.indexOf(\"-\") + 1, stringId.length)\r\n    );\r\n\r\n  if (data === \"start\") {\r\n    startNodeX = x;\r\n    startNodeY = y;\r\n  } else {\r\n    endNodeX = x;\r\n    endNodeY = y;\r\n  }\r\n};\r\n","import './App.css';\nimport Grid from './Components/Grid';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Grid/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}